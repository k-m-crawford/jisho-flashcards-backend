{"version":3,"sources":["components/users/userprofile.js","logo.png","components/header.js","components/pages/toreview.js","components/cards/card-bodies/word-card-body.js","components/cards/startoggle.js","components/cards/wordcard.js","components/cards/card-bodies/kanji-card-body.js","components/cards/kanjicard.js","components/searchbar/searchresults.js","components/notification.js","components/searchbar/searchbar.js","components/pages/home.js","components/cards/reviewcard.js","components/pages/reviewpage.js","components/pages/decks.js","components/users/loginbutton.js","App.js","reportWebVitals.js","index.js"],"names":["UserProfile","badge","useState","anchorEl","setAnchorEl","useAuth0","user","isAuthenticated","logout","Avatar","style","float","alt","name","src","picture","onClick","e","currentTarget","Menu","id","autoFocus","keepMounted","open","Boolean","onClose","MenuItem","component","Link","color","href","underline","preventDefault","returnTo","window","location","origin","Header","Box","Grid","container","mt","mb","sx","flexGrow","spacing","item","xs","sm","md","width","logo","my","lg","textAlign","maxWidth","ToReview","reviewType","count","setCount","nextReview","setNextReview","useEffect","a","axios","get","process","res","status","all","data","reviews","toReview","soonestReview","forEach","review","level","now","Date","reviewTime","thisReview","Math","ceil","abs","toString","main","Card","elevation","CardHeader","title","toUpperCase","CardContent","backgroundColor","CircularProgress","Typography","variant","Button","className","WordCardBody","List","senses","map","sense","i","ListItem","fontSize","parts_of_speech","pos","length","english_definitions","def","StarToggle","cardInfo","isToggled","setIsToggled","cardType","query","finalSlug","slug","setToggle","curDate","obj","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","console","log","put","post","mr","WordCard","active","setActiveCard","hit","isActive","bg","col","subtitleColor","px","japanese","word","subheader","reading","action","Collapse","in","p","m","KanjiCardBody","Paper","mx","display","kunyomi","kun","onyomi","on","KanjiCard","kanji","meaning","SearchResults","hits","activeCard","constructor","Array","breakpointCols","default","type","Number","found","Notification","msg","flavour","Alert","severity","schema","Yup","shape","searchTerm","required","SearchBar","setHits","alertText","setAlertText","handleSearch","values","searchType","validationSchema","onSubmit","initialValues","formik","noValidate","autoComplete","handleSubmit","TextField","fullWidth","label","helperText","value","onChange","handleChange","RadioGroup","row","FormControlLabel","control","Radio","Home","justifyContent","Accordion","AccordionSummary","expandIcon","AccordionDetails","ReviewCard","cardData","setCardData","dbTypePath","setDbTypePath","bgColor","setBgColor","bodyExpanded","setBodyExpanded","successReviewTime","setSuccessReviewTime","failureReviewTime","setFailureReviewTime","setLevel","bankRef","setBankRef","updateReview","passedLevel","newLevel","ref","reload","selectedReview","dbPath","_bankRef","wordSlug","pulledData","to","pt","ReviewPage","useParams","DecksPage","cards","setCards","filter","setFilter","reviewSlugs","reviewCards","fullCard","push","ToggleButtonGroup","f","includes","_f","ToggleButton","card","LoginButton","loginWithRedirect","theme","createTheme","palette","primary","secondary","typography","button","fontWeight","lineHeight","letterSpacing","props","MuiList","dense","MuiMenuItem","MuiTable","size","App","isLoading","ThemeProvider","Container","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","useRefreshTokens","cacheLocation","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cfc4166.chunk.js","sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/display-name */\r\n/* eslint-disable react/prop-types */\r\nimport { useState } from \"react\"\r\nimport { Menu, MenuItem, Link, Avatar } from \"@material-ui/core\"\r\nimport { useAuth0 } from \"@auth0/auth0-react\"\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst UserProfile = ({ badge }) => {\r\n\r\n    const [ anchorEl, setAnchorEl ] = useState(null)\r\n    const { user, isAuthenticated, logout } = useAuth0()\r\n\r\n    const openMenu = (e) => { setAnchorEl(e.currentTarget) }\r\n    const handleClose = () => { setAnchorEl(null) }\r\n\r\n    return (\r\n        isAuthenticated && badge && (\r\n            <span>\r\n                <Avatar style={{float: \"right\"}} alt={user.name} src={user.picture} onClick={openMenu} />\r\n                <Menu id=\"profile-menu\"\r\n                    anchorEl={anchorEl}\r\n                    autoFocus={false}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}>\r\n                    <MenuItem component={Link} color=\"inherit\" href=\"/decks\">Decks</MenuItem>\r\n                    <MenuItem><Link underline=\"none\" href=\"/decks\" color=\"inherit\">Profile</Link></MenuItem>\r\n                    <MenuItem onClick={(e) => { e.preventDefault(); logout({ returnTo: window.location.origin }) }}>Logout</MenuItem>\r\n                </Menu>\r\n                \r\n            </span>\r\n        )\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","export default __webpack_public_path__ + \"static/media/logo.4fe22ae4.png\";","/* eslint-disable react/react-in-jsx-scope */\r\nimport { Box, Grid, Link } from \"@material-ui/core\"\r\nimport UserProfile from \"./users/userprofile\"\r\nimport logo from \"../logo.png\"\r\nimport { useAuth0 } from \"@auth0/auth0-react\"\r\n\r\nconst Header = () => { \r\n\r\n    const { isAuthenticated } = useAuth0()\r\n    \r\n    return (\r\n        <Box>\r\n            <Grid container mt={1} mb={2} sx={{ flexGrow: 1 }} spacing={2}>\r\n                { isAuthenticated && (\r\n                    <>\r\n                        <Grid item xs={8} sm={5} md={4}>\r\n                            <Link href=\"/\"><img style={{width: \"100%\" }} src={logo} /></Link>\r\n                        </Grid>\r\n                        <Grid item xs={3} sm={6} md={7}></Grid>\r\n                        <Grid item my=\"auto\" xs={1} md={1} lg={1}>\r\n                            <UserProfile badge={true} />\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n                { !isAuthenticated && (\r\n                    <Grid item xs={12} sx={{textAlign: \"center\"}}>\r\n                        <Link href=\"/\"><img style={{width: \"100%\", maxWidth: \"380px\" }} src={logo} /></Link>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header","/* eslint-disable react/prop-types */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Grid, CircularProgress, Card, CardHeader, CardContent, Button, Typography, Link  } from \"@material-ui/core\"\r\nimport { useAuth0 } from \"@auth0/auth0-react\"\r\nimport axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst ToReview = ({reviewType, color}) => {\r\n\r\n    const [ count, setCount ] = useState(null)\r\n    const [ nextReview, setNextReview ] = useState(null)\r\n    const { user } = useAuth0()\r\n\r\n    useEffect(() =>{\r\n        const main = async () => {\r\n\r\n            const res = await axios.get(process.env.REACT_APP_API_URL+\"users/getReviews/all/\" + reviewType + \"/\" + user[\"https://jisho-flashcards.namespace.com/username\"])           \r\n            if(res.status === 200){\r\n\r\n                const all = reviewType === \"all\" ? res.data.reviews : res.data\r\n\r\n                let toReview = 0\r\n                let soonestReview = null\r\n                all.forEach(review => {\r\n                    if(review.level < 9){\r\n                        const now = new Date()\r\n                        const reviewTime = new Date(review.nextReview)\r\n\r\n                        if(reviewTime < now)\r\n                            toReview += 1\r\n                        \r\n                        if(soonestReview){\r\n                            let thisReview = Math.ceil(Math.abs(now - reviewTime) / 36e5)\r\n                            if(thisReview < soonestReview)\r\n                                soonestReview = thisReview\r\n                        }\r\n                        else\r\n                            soonestReview = Math.ceil(Math.abs(now - reviewTime) / 36e5)\r\n                    }\r\n                })\r\n\r\n                if(toReview > 0)\r\n                    setNextReview(\"now!\")\r\n                else {\r\n                    if(soonestReview <= 24)\r\n                        setNextReview(soonestReview.toString() + \" hours\")\r\n                    else\r\n                        setNextReview(Math.ceil(soonestReview/24) + \" days\")\r\n                }\r\n\r\n                setCount(toReview)\r\n            }\r\n        }\r\n\r\n        main()\r\n\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <Grid item xs={12} md={4}>\r\n            <Card elevation={4} sx={{textAlign: \"center\"}}>\r\n                <CardHeader title={reviewType.toUpperCase()} />\r\n\r\n                <CardContent sx={{ backgroundColor: color }}>\r\n                    { count === null && (\r\n                        <CircularProgress />\r\n                    )}\r\n                    { count !== null && (\r\n                        <>\r\n                            <Typography color=\"white\" variant=\"h2\">{count}</Typography>\r\n                            { count !== 0 && (\r\n                                <Button\r\n                                    href={`/review/${reviewType}`} \r\n                                    variant=\"outlined\" \r\n                                    color=\"default\" \r\n                                    sx={{width: \"100%\"}}\r\n                                    component={Link}\r\n                                >\r\n                                            Review!\r\n                                </Button>\r\n                            )}\r\n                            { count === 0 && (\r\n                                <Button variant=\"outlined\" \r\n                                    color=\"default\" \r\n                                    style={{width: \"100%\"}}>\r\n                                        Done!\r\n                                </Button>\r\n                            )}\r\n                        </>\r\n                    )}\r\n\r\n                </CardContent>\r\n                <CardContent><span className=\"footer-text\">next review {nextReview}</span></CardContent>\r\n            </Card>\r\n        </Grid>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default ToReview","/* eslint-disable no-undef */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { List, ListItem, Typography, Grid } from \"@material-ui/core\"\r\n\r\nconst WordCardBody = (data) => {\r\n\r\n    return (\r\n    \r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <List>\r\n                    {data.data.senses.map((sense, i)=> (\r\n                        <ListItem key={i} sx={{ backgroundColor: \"white\"}}>\r\n                            <div>\r\n                                <Typography sx={{color: \"rgba(0, 0, 0, 0.6)\"}}>{i + 1}.&nbsp;</Typography>\r\n                            </div>\r\n                            <div>\r\n                                <Typography sx={{fontSize: \"smaller\", color: \"rgba(0, 0, 0, 0.6)\"}}>{ sense.parts_of_speech.map((pos, i) => (\r\n                                    <span key={i}>\r\n                                        {pos + (i === sense.parts_of_speech.length - 1 ? \"\" : \"; \")}\r\n                                    </span>\r\n                                ))}</Typography>\r\n                                <Typography sx={{fontSize: \"smaller\", color: \"black\"}}>{ sense.english_definitions.map((def, i) => (\r\n                                    <span key={i}>\r\n                                        {def + (i === sense.english_definitions.length - 1 ? \"\" : \"; \" )} \r\n                                    </span>\r\n                                ))}</Typography>\r\n                            </div>\r\n                        \r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default WordCardBody","/* eslint-disable react/prop-types */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { useEffect, useState } from \"react\"\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\"\r\nimport StarIcon from \"@material-ui/icons/Star\"\r\nimport { useAuth0 } from \"@auth0/auth0-react\"\r\nimport axios from \"axios\"\r\n\r\nconst StarToggle = ({cardInfo}) => {\r\n\r\n    const [ isToggled, setIsToggled ] = useState(false)\r\n    const { user } = useAuth0()\r\n    const cardType = cardInfo.query ? \"kanji\" : \"word\"\r\n    const finalSlug = cardInfo.query ? cardInfo.query : cardInfo.slug\r\n\r\n    const setToggle = async () => {\r\n        \r\n        const curDate = new Date()\r\n\r\n        const obj = cardInfo.query ? \r\n            {\r\n                \"kanji\": cardInfo.query,\r\n                \"nextReview\": new Date(curDate.getFullYear(), curDate.getMonth(), curDate.getDate(),\r\n                    curDate.getHours() + 4, curDate.getMinutes(), curDate.getSeconds())\r\n            } :\r\n            {\r\n                \"wordSlug\": cardInfo.slug,\r\n                \"nextReview\": new Date(curDate.getFullYear(), curDate.getMonth(), curDate.getDate(),\r\n                    curDate.getHours() + 4, curDate.getMinutes(), curDate.getSeconds())\r\n            }\r\n\r\n        console.log(obj.nextReview)\r\n\r\n        const res = isToggled ? await axios.put(process.env.REACT_APP_API_URL+\"users/removeReview/\"+user[\"https://jisho-flashcards.namespace.com/username\"], obj)\r\n            : await axios.post(process.env.REACT_APP_API_URL+\"users/addReview/\"+user[\"https://jisho-flashcards.namespace.com/username\"], obj)\r\n\r\n        console.log(\"set toggle \", res)\r\n\r\n        if(res.status === 200){\r\n            setIsToggled(!isToggled)\r\n            await axios.post(process.env.REACT_APP_API_URL+\"db/\"+cardType, cardInfo)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const main = async () => {\r\n            const result = await axios.get(process.env.REACT_APP_API_URL+\"users/checkReview/\"+cardType+\"/\"+user[\"https://jisho-flashcards.namespace.com/username\"]+\"/\"+finalSlug)\r\n\r\n            if(result.status === 200) \r\n                setIsToggled(true)\r\n                    \r\n        }\r\n        main()\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n            { isToggled && (\r\n                <StarIcon sx={{mr: 1, color: \"gold\"}} onClick={() => setToggle() } />\r\n            )}\r\n            { !isToggled && (\r\n                <StarBorderIcon sx={{mr: 1}} onClick={() => setToggle() }  color=\"gold\" />\r\n            )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default StarToggle","/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Card, CardContent, Collapse, CardHeader, Typography, Grid } from \"@material-ui/core\"\r\nimport WordCardBody from \"./card-bodies/word-card-body\"\r\nimport StarToggle from \"./startoggle\"\r\n\r\nconst WordCard = ({active, setActiveCard, hit}) => {\r\n\r\n    const isActive = active === hit.slug\r\n    const bg = isActive ? process.env.REACT_APP_WORD_COLOUR : \"white\"\r\n    const col = isActive ? \"white\" : \"black\"\r\n    const subtitleColor = isActive ? \"white\" : \"rgba(0, 0, 0, 0.6)\"\r\n\r\n    return (\r\n        <Grid item sx={{ px: 1, my: 1 }} >\r\n            <Card sx={{ backgroundColor: bg, color: col }}\r\n                aria-controls=\"card-body-collapse\"\r\n                aria-expanded={isActive}\r\n                onClick={() => isActive ? setActiveCard(-1) : setActiveCard(hit.slug)} \r\n                className=\"mx-auto\"\r\n            >   \r\n                <CardHeader title={hit.japanese[0].word} \r\n                    subheader={<Typography sx={{color: subtitleColor}}>{hit.japanese[0].reading}</Typography>}\r\n                    action={<StarToggle cardInfo={hit} />} />\r\n                <Collapse in={isActive}>\r\n                    <CardContent sx={{p: 0, m: 0}}>\r\n                        <WordCardBody data={hit} />\r\n                    </CardContent>\r\n                </Collapse>\r\n\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default WordCard","/* eslint-disable no-undef */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Grid, List, ListItem, Paper, Typography } from \"@material-ui/core\"\r\n\r\nconst KanjiCardBody = (data) => {\r\n\r\n    return (\r\n    \r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <List>\r\n                    <Paper sx={{ backgroundColor: process.env.REACT_APP_KANJI_COLOUR, mx: 0.1, my: 0.3}}>\r\n                        <ListItem sx={{backgroundColor: \"white\"}}>\r\n                            <Typography variant=\"h5\" style={{ display: \"inline\" }}>Kun:&nbsp;</Typography>\r\n                            { data.data.kunyomi.map((kun, i) => (\r\n                                <Typography sx={{mt: 0.70}} key={kun}>{kun + (i === data.data.kunyomi.length - 1 ? \"\" : \",\")} &nbsp;</Typography>\r\n                            ))}\r\n                        </ListItem>\r\n                        <ListItem sx={{backgroundColor: \"white\"}}>\r\n                            <Typography variant=\"h5\" style={{ display: \"inline\" }}>On:&nbsp;</Typography >\r\n                            { data.data.onyomi.map((on, i) => (\r\n                                <Typography sx={{mt: 0.70}} key={on}>{on + (i === data.data.onyomi.length - 1 ? \"\" : \", \")}&nbsp;</Typography>\r\n                            ))}\r\n                        </ListItem>\r\n                    </Paper>\r\n                </List>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default KanjiCardBody","/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\nimport React from \"react\"\r\nimport { Grid, Card, CardHeader, Collapse, Typography } from \"@material-ui/core\"\r\nimport KanjiCardBody from \"./card-bodies/kanji-card-body\"\r\nimport StarToggle from \"./startoggle\"\r\n\r\nconst KanjiCard = ({ kanji, active, setActiveCard }) => {\r\n\r\n    const isActive = active === kanji.query\r\n    const bg = isActive ? process.env.REACT_APP_KANJI_COLOUR : \"white\"\r\n    const col = isActive ? \"white\" : \"black\"\r\n    const subtitleColor = isActive ? \"\" : \"rgba(0, 0, 0, 0.6)\"\r\n\r\n    return (\r\n        <Grid item sx={{ px: 1, my: 1 }} xs={12} >\r\n            <Card sx={{ backgroundColor: bg, color: col }}\r\n                aria-controls=\"card-body-collapse\"\r\n                aria-expanded={isActive}\r\n                onClick={() => isActive ? setActiveCard(-1) : setActiveCard(kanji.query)} \r\n                className=\"mx-auto\"\r\n            >   \r\n                <CardHeader title={kanji.query}\r\n                    subheader={<Typography sx={{color: subtitleColor}}>{kanji.meaning}</Typography>} \r\n                    action={<StarToggle cardInfo={kanji} />}/>\r\n                  \r\n                <Collapse in={isActive}>\r\n                    <div id=\"card-body-collapse\">\r\n                        <KanjiCardBody data={kanji} />\r\n                    </div>\r\n                </Collapse>\r\n\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default KanjiCard\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable no-mixed-spaces-and-tabs */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { useState } from \"react\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport Masonry from \"react-masonry-css\"\r\nimport WordSearchCard from \"../cards/wordcard\"\r\nimport KanjiCard from \"../cards/kanjicard\"\r\n\r\nconst SearchResults = ({hits}) => {\r\n\r\n    const [ activeCard, setActiveCard ] = useState(-1)\r\n\r\n    const breakpointColumnsObj = {\r\n        default: 4,\r\n        992: 3,\r\n        768: 2,\r\n        576: 1\r\n    }\r\n\r\n    return (\r\n        <Grid container sx={{mt: 1}}>\r\n            { hits.constructor === Array && hits.length > 0 &&\r\n            <Masonry\r\n            \tbreakpointCols={breakpointColumnsObj}\r\n            \tclassName=\"masonry-grid\"\r\n            >\r\n            \t{hits.map((hit, i) => \r\n            \t\t<WordSearchCard \r\n            \t\t\tactive={activeCard} \r\n            \t\t\tsetActiveCard={setActiveCard}\r\n            \t\t\tkey={hit.slug + Number(i)} \r\n            \t\t\thit={hit}\r\n            \t\t\ttype={\"word\"} />\r\n            \t)}\r\n            </Masonry>\r\n            }\r\n            { hits.constructor !== Array && hits.found &&\r\n            <KanjiCard \r\n            \tactive={activeCard} \r\n            \tsetActiveCard={setActiveCard}\r\n            \tkanji={hits}\r\n            />\r\n            }\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchResults","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Alert} from \"@material-ui/core\"\r\n\r\nconst Notification = ({msg, flavour}) => {\r\n\r\n    return (\r\n        <>\r\n            { msg !== null && \r\n        \r\n            <Alert severity={flavour}>{msg}</Alert>\r\n\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Notification","/* eslint-disable react/react-in-jsx-scope */\r\nimport { useState } from \"react\"\r\nimport { TextField, RadioGroup, FormControlLabel, Radio, Button, Grid } from \"@material-ui/core\"\r\nimport axios from \"axios\"\r\nimport { Formik } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport SearchResults from \"./searchresults\"\r\nimport Notification from \"../notification\"\r\n\r\nconst schema = Yup.object().shape({\r\n    searchTerm: Yup.string().required()\r\n})\r\n\r\nconst SearchBar = () => {\r\n\r\n    const [ hits, setHits ] = useState([])\r\n    const [ alertText, setAlertText ] = useState(null)\r\n\r\n    const handleSearch = async (values) => {\r\n\r\n        setAlertText(null)\r\n\r\n        const res = values.searchType === \"kanji\" ? \r\n        // eslint-disable-next-line no-undef\r\n            await axios.get(process.env.REACT_APP_API_URL+\"kanji/\" + values.searchTerm) \r\n        // eslint-disable-next-line no-undef\r\n            :   await axios.get(process.env.REACT_APP_API_URL+\"phrase/\" + values.searchTerm) \r\n\r\n        \r\n        if((values.searchType === \"word\" && res.data.length === 0) || (values.searchType === \"kanji\" && !res.data.found))\r\n            setAlertText(\"No results found.\")\r\n\r\n        setHits(res.data)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik validationSchema={schema}\r\n                onSubmit={handleSearch}\r\n                initialValues={{\r\n                    searchTerm: \"\",\r\n                    searchType: \"kanji\"\r\n                }}\r\n            >\r\n                { formik => (\r\n                    <form noValidate autoComplete=\"off\" onSubmit={(e) => { e.preventDefault(); formik.handleSubmit(e) }}>\r\n                        \r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={10}>\r\n                                <TextField fullWidth\r\n                                    label=\"Search for review cards.\"\r\n                                    helperText=\"For kanji, input Japanese characters. For words, input either English or Japanese characters.\"\r\n                                    variant=\"standard\"\r\n                                    id=\"searchTerm\" \r\n                                    value={formik.values.searchTerm} \r\n                                    onChange={formik.handleChange} \r\n                                />\r\n                            </Grid>\r\n                            <Grid item mt={1} xs={12} sm={2}>\r\n                                <Button my={1} variant=\"outlined\" type=\"submit\">Search</Button>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <RadioGroup row name=\"searchType\" onChange={formik.handleChange} value={formik.values.searchType} >                       \r\n\r\n                                    <FormControlLabel value=\"kanji\" label=\"Kanji\" control={<Radio />} />\r\n                                    <FormControlLabel value=\"word\" label=\"Word\" control={<Radio />} />\r\n                                </RadioGroup>\r\n                            </Grid>\r\n                        \r\n                        </Grid>\r\n                    </form>\r\n                    // <Form noValidate onSubmit={(e) => { e.preventDefault(); formik.handleSubmit(e) }}>\r\n                    //     <Form.Group className=\"mt-2 mb-3\" controlId=\"formSearch\">\r\n                    //         <Form.Label>Search a word or kanji.</Form.Label>\r\n                    //         <Form.Control type=\"text\" name=\"searchTerm\" value={formik.values.searchTerm} onChange={formik.handleChange} />\r\n                    //         <Button className=\"mt-2\" variant=\"primary\" type=\"submit\">Search</Button>\r\n                    //         <Form.Check defaultChecked className=\"mx-4\" inline type=\"radio\" value=\"kanji\" label=\"Kanji\" onChange={formik.handleChange} name=\"searchType\" />\r\n                    //         <Form.Check className=\"mx-4\" inline type=\"radio\" value=\"word\" label=\"Word\" onChange={formik.handleChange} name=\"searchType\" />\r\n                    //     </Form.Group>\r\n                    // </Form>\r\n                )}\r\n            </Formik>\r\n\r\n            <Notification msg={alertText} flavour=\"error\" />\r\n\r\n            <SearchResults hits={hits} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Grid, Accordion, AccordionSummary, AccordionDetails, Typography } from \"@material-ui/core\"\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\r\nimport Header from \"../header\"\r\nimport ToReview from \"./toreview\"\r\nimport SearchBar from \"../searchbar/searchbar\"\r\n\r\nconst Home = () => (\r\n    <>\r\n        <Header />\r\n        <Grid container spacing={2} px={5} my={2} sx={{justifyContent: \"center\"}}>\r\n            <ToReview reviewType=\"kanji\" color={process.env.REACT_APP_KANJI_COLOUR}/>\r\n            <ToReview reviewType=\"word\" color={process.env.REACT_APP_WORD_COLOUR}  />\r\n            <ToReview reviewType=\"all\" color={process.env.REACT_APP_ALL_COLOUR} />\r\n        </Grid>\r\n        <Grid container spacing={2} px={5} my={2} sx={{justifyContent: \"center\"}}>\r\n            <Grid item mb={3} xs={12} lg={12}>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"search-panel\"\r\n                        id=\"search-panel\" >\r\n                        <Typography>Search for Review Cards.</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <SearchBar />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </Grid>\r\n        </Grid>\r\n    </>\r\n)\r\n\r\nexport default Home","/* eslint-disable no-unexpected-multiline */\r\n/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Card, CardHeader, CardContent, CircularProgress, Collapse, Button, Typography, Grid, Paper } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useAuth0 } from \"@auth0/auth0-react\"\r\nimport WordCardBody from \"./card-bodies/word-card-body\"\r\nimport KanjiCardBody from \"./card-bodies/kanji-card-body\"\r\nimport axios from \"axios\"\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nconst ReviewCard = ({reviewType}) => {\r\n\r\n    const [ cardData, setCardData ] = useState(null)\r\n    const [ dbTypePath, setDbTypePath ] = useState(null)\r\n    const [ bgColor, setBgColor ] = useState(\"white\")\r\n    const [ bodyExpanded, setBodyExpanded ] = useState(false)\r\n    const [ successReviewTime, setSuccessReviewTime ] = useState(null)\r\n    const [ failureReviewTime, setFailureReviewTime ] = useState(null)\r\n    const [ level, setLevel ] = useState(null)\r\n    const [ bankRef, setBankRef ] = useState(null)\r\n    const { user } = useAuth0()\r\n\r\n    const updateReview = async (passedLevel) => {\r\n\r\n        const newLevel = passedLevel <= 0 ? 1 : passedLevel\r\n\r\n        console.log(newLevel) \r\n\r\n        await axios.put(process.env.REACT_APP_API_URL+\"users/updateReview/\"+dbTypePath+\"/\"+user[\"https://jisho-flashcards.namespace.com/username\"], \r\n            {  \r\n                ref: bankRef,\r\n                newLevel\r\n            })\r\n\r\n        \r\n        window.location.reload()\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const main = async () => {\r\n\r\n            const selectedReview = await axios.get(process.env.REACT_APP_API_URL+\"users/getReviews/due/one/\"+reviewType+\"/\"+user[\"https://jisho-flashcards.namespace.com/username\"])\r\n            setLevel(selectedReview.data.level)\r\n            console.log(selectedReview)\r\n\r\n            switch(selectedReview.data.level) {\r\n            case 1:\r\n                setSuccessReviewTime(\"8 hours\")\r\n                setFailureReviewTime(\"4 hours\")\r\n                break\r\n            case 2:\r\n                setSuccessReviewTime(\"1 day\")\r\n                setFailureReviewTime(\"8 hours\")\r\n                break\r\n            case 3:\r\n                setSuccessReviewTime(\"2 days\")\r\n                setFailureReviewTime(\"1 day\")\r\n                break\r\n            case 4:\r\n                setSuccessReviewTime(\"1 week\")\r\n                setFailureReviewTime(\"2 days\")\r\n                break\r\n            case 5:\r\n                setSuccessReviewTime(\"2 weeks\")\r\n                setFailureReviewTime(\"1 week\")\r\n                break\r\n            case 6:\r\n                setSuccessReviewTime(\"1 month\")\r\n                setFailureReviewTime(\"2 weeks\")\r\n                break\r\n            case 7:\r\n                setSuccessReviewTime(\"4 months\")\r\n                setFailureReviewTime(\"1 month\")\r\n                break\r\n            case 8:\r\n                setSuccessReviewTime(\"completed\")\r\n                setFailureReviewTime(\"4 months\")\r\n\r\n            }\r\n\r\n\r\n            const dbPath = selectedReview.data.kanji ? \"kanji\" : \"word\"\r\n            setDbTypePath(dbPath)\r\n            const _bankRef = dbPath === \"word\" ? selectedReview.data.wordSlug : selectedReview.data.kanji\r\n            setBankRef(_bankRef)\r\n            console.log(bankRef)\r\n            const pulledData = await axios.get(process.env.REACT_APP_API_URL+\"db/\"+dbPath+\"/\"+_bankRef)\r\n\r\n            if(pulledData.data)\r\n                setCardData(pulledData.data)\r\n            else\r\n                setCardData(\"redirect\")\r\n            console.log(pulledData)\r\n\r\n            if(dbPath === \"kanji\")\r\n                setBgColor(process.env.REACT_APP_KANJI_COLOUR)\r\n            else if(dbPath === \"word\")\r\n                setBgColor(process.env.REACT_APP_WORD_COLOUR)\r\n\r\n\r\n        }\r\n\r\n        main()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Card elevation={18}>\r\n            { cardData === \"redirect\" && (\r\n                <Redirect to=\"/\" />\r\n            )}\r\n            { cardData && (\r\n                <>\r\n                    <CardHeader sx={{ textAlign: \"center\", backgroundColor: bgColor, color: \"white\", pt: 7 }} \r\n                        title={ \r\n                            <Typography sx={{color:\"white\"}} variant=\"h1\">\r\n                                {cardData.kanji && cardData.kanji}\r\n                                {cardData.wordSlug && cardData.data.japanese[0].word }\r\n                            </Typography>\r\n                        }\r\n                        subheader={\r\n                            (\r\n                                <>\r\n                                    <Collapse sx={{mb: 10}} in={bodyExpanded}> \r\n                                        <Typography sx={{color:\"white\"}} variant=\"subtitle1\">\r\n                                            { cardData.kanji &&  cardData.data.meaning}\r\n                                            { cardData.wordSlug && cardData.data.japanese[0].reading }  \r\n                                        </Typography>\r\n                                    </Collapse>\r\n                                    <Button \r\n                                        style={{width:\"100%\"}} \r\n                                        variant=\"contained\"\r\n                                        color=\"default\"\r\n                                        onClick={()=> setBodyExpanded(!bodyExpanded) }>\r\n                                    Reveal\r\n                                    </Button>\r\n                                </>\r\n                            )\r\n                        }/>\r\n                    \r\n                    <Collapse in={bodyExpanded}> \r\n                        <CardContent>\r\n                            { cardData.kanji && ( <KanjiCardBody data={cardData.data} /> ) }\r\n                            { cardData.wordSlug && ( <WordCardBody data={cardData.data} /> ) } \r\n                            <Grid container spacing={2} sx={{justifyContent: \"center\", mt: 1}}>\r\n                                <Grid item>\r\n                                    <Button onClick={() => updateReview(level + 1)} variant=\"contained\" >Correct</Button>\r\n                                </Grid>\r\n                                <Grid item>    \r\n                                    <Button onClick={() => updateReview(level - 1)} variant=\"contained\" color=\"secondary\" >Incorrect</Button>\r\n                                </Grid>\r\n                                <Grid item xs={12} sx={{textAlign:\"center\"}}>\r\n                                    <Paper variant=\"outlined\">\r\n                                        <Typography variant=\"subtitle2\">\r\n                                            successful review in {successReviewTime}\r\n                                            <br />incorrect review in {failureReviewTime}\r\n                                        </Typography>\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Collapse>\r\n                </>\r\n            )}\r\n            { !cardData && (\r\n                <CardHeader style={{ textAlign: \"center\", backgroundColor: bgColor }} >\r\n                    <CircularProgress />\r\n                </CardHeader>\r\n            )}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ReviewCard","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Grid, Button } from \"@material-ui/core\"\r\nimport { useParams, Link } from \"react-router-dom\"\r\nimport ReviewCard from \"../cards/reviewcard\"\r\n\r\nconst ReviewPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Grid item sx={{mt: 4, mb: 1}} xs={12}>\r\n                    <ReviewCard reviewType={useParams().type}/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item sx={{my: 2}} xs={12} style={{textAlign: \"center\"}}>\r\n                    <Button component={Link} to=\"/\" variant=\"outlined\" >Go Back</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ReviewPage","/* eslint-disable no-undef */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable react/react-in-jsx-scope */\r\nimport { Grid, CircularProgress, Alert, Link, ToggleButtonGroup, ToggleButton } from \"@material-ui/core\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useAuth0 } from \"@auth0/auth0-react\"\r\nimport Header from \"../header\"\r\nimport Masonry from \"react-masonry-css\"\r\nimport WordSearchCard from \"../cards/wordcard\"\r\nimport KanjiCard from \"../cards/kanjicard\"\r\nimport axios from \"axios\"\r\n\r\nconst DecksPage = () => {\r\n\r\n    const [ cards, setCards ] = useState(null)\r\n    const [ activeCard, setActiveCard ] = useState(null)\r\n    const [ filter, setFilter ] = useState([ \"kanji\", \"words\" ])\r\n    const { user } = useAuth0()\r\n    \r\n    const breakpointColumnsObj = {\r\n        default: 4,\r\n        992: 3,\r\n        768: 2,\r\n        576: 1\r\n    }\r\n\r\n    // const changeFilter = (val) => setFilter(val)\r\n\r\n    useEffect(() => {\r\n\r\n        const main = async () => {\r\n            const res = await axios.get(process.env.REACT_APP_API_URL+\"users/getReviews/all/all/\"+user[\"https://jisho-flashcards.namespace.com/username\"])\r\n            const reviewSlugs = res.data.reviews\r\n\r\n            let reviewCards = []\r\n\r\n            for(let i = 0; i < reviewSlugs.length; i++) {\r\n                const ref = reviewSlugs[i].kanji ? reviewSlugs[i].kanji : reviewSlugs[i].wordSlug\r\n                const type = reviewSlugs[i].kanji ? \"kanji\" : \"word\"\r\n                const fullCard = await axios.get(process.env.REACT_APP_API_URL+\"db/\"+type+\"/\"+ref)\r\n                fullCard.data.level = reviewSlugs[i].level\r\n                reviewCards.push(fullCard.data)\r\n            }\r\n            setCards(reviewCards)\r\n        }\r\n\r\n        main()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n\r\n            { !cards && (\r\n                <Grid container sx={{textAlign:\"center\"}}>\r\n                    <Grid item  sx={{my: 5}} xs={12}>\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n            { cards && cards.length === 0 && (\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <Alert severity=\"warning\" sx={{mt: 2}}>No cards found. Get started by adding with the search bar on the <Link color=\"inherit\" href=\"/\">home screen</Link>.</Alert>\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n            { cards && cards.length > 0 && (\r\n                <>\r\n                    <Grid container sx={{mt:2, mb:4, textAlign: \"center\" }} >\r\n                        <Grid item xs={12}>\r\n                            <ToggleButtonGroup variant=\"contained\" color=\"primary\"\r\n                                value={filter}\r\n                                onChange={(e, f) => { \r\n                                    if(filter.includes(\"completed\") && f.length === 0)\r\n                                        f = [\"kanji\", \"words\"]\r\n                                    else if(filter.includes(\"completed\") && f.length > 1)\r\n                                        f = f.filter(_f=>_f!==\"completed\")\r\n                                    else if(!filter.includes(\"completed\") && f.includes(\"completed\"))\r\n                                        f = [\"completed\"]\r\n                                    setFilter(f)\r\n                                }}\r\n                            >\r\n                                <ToggleButton value=\"kanji\">Kanji</ToggleButton>\r\n                                <ToggleButton value=\"words\">Words</ToggleButton>\r\n                                <ToggleButton value=\"completed\">Completed</ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Masonry\r\n                                breakpointCols={breakpointColumnsObj}\r\n                                className=\"masonry-grid\"\r\n                            >\r\n                                {cards.map((card, i) => {\r\n                                    if(filter.includes(\"completed\"))\r\n                                        console.log(card)\r\n                                    return (\r\n                                        <span key={i}>\r\n                                            { card.wordSlug && ((filter.includes(\"words\") && card.level < 8) || (filter.includes(\"completed\") && card.level > 8)) && (\r\n                                                <WordSearchCard \r\n                                                    active={activeCard} \r\n                                                    setActiveCard={setActiveCard}\r\n                                                    hit={card.data}\r\n                                                    type={\"word\"} />\r\n                                            )}\r\n                                            { card.kanji && ((filter.includes(\"kanji\") && card.level < 8) || (filter.includes(\"completed\") && card.level > 8)) && (\r\n                                                <KanjiCard \r\n                                                    active={activeCard} \r\n                                                    setActiveCard={setActiveCard}\r\n                                                    kanji={card.data} />\r\n                                            )}\r\n                                        </span>\r\n                                    )})}\r\n                            </Masonry>\r\n                        </Grid>\r\n                    </Grid>\r\n                \r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default DecksPage","import React from \"react\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport { useAuth0 } from \"@auth0/auth0-react\"\r\n\r\nconst LoginButton = () => {\r\n    const { loginWithRedirect } = useAuth0()\r\n\r\n    return (\r\n        <Button \r\n            onClick={() => loginWithRedirect()} \r\n            sx={{mt: 2}} \r\n            variant=\"contained\">\r\n                Login\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default LoginButton","import React from \"react\"\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport { Grid, Container, CircularProgress, ThemeProvider } from \"@material-ui/core\"\r\nimport Home from \"./components/pages/home\"\r\nimport ReviewPage from \"./components/pages/reviewpage\"\r\nimport DecksPage from \"./components/pages/decks\"\r\nimport LoginButton from \"./components/users/loginbutton\"\r\nimport Header from \"./components/header\"\r\nimport { useAuth0 } from \"@auth0/auth0-react\"\r\nimport \"./App.css\"\r\nimport \"@fontsource/roboto\"\r\n\r\nimport { createTheme } from \"@material-ui/core/styles\"\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        type: \"light\",\r\n        primary: {\r\n            main: \"#56d926\",\r\n        },\r\n        secondary: {\r\n            main: \"#5a5a5b\",\r\n        },\r\n        default: {\r\n            main: \"#e0e0e0\"\r\n        }\r\n    },\r\n    typography: {\r\n        button: {\r\n            fontWeight: 500,\r\n            lineHeight: 2,\r\n            letterSpacing: \"0.15em\",\r\n        },\r\n    },\r\n    props: {\r\n        MuiList: {\r\n            dense: true,\r\n        },\r\n        MuiMenuItem: {\r\n            dense: true,\r\n        },\r\n        MuiTable: {\r\n            size: \"small\",\r\n        },\r\n    },\r\n})\r\n\r\nconst App = () => {\r\n\r\n    const { isAuthenticated, isLoading } = useAuth0()\r\n\r\n    return (\r\n        <Router>\r\n            <ThemeProvider theme={theme}><Container>\r\n\r\n                { isLoading && (\r\n                    <>\r\n                        <Header />\r\n                        <Grid container justifyContent=\"center\" spacing={2}>\r\n                            <Grid item xs={1}>\r\n                                <CircularProgress />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n\r\n                { !isLoading && !isAuthenticated && (\r\n                    <>\r\n                        <Header />\r\n                        <Grid container sx={{textAlign: \"center\"}} spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <LoginButton />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n\r\n                { !isLoading && isAuthenticated && (\r\n                    <Switch>\r\n                        <Route path=\"/review/:type\">\r\n                            <ReviewPage />\r\n                        </Route>\r\n                        <Route path=\"/decks\">\r\n                            <DecksPage />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                    </Switch>\r\n                )}\r\n            </Container></ThemeProvider>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry)\r\n            getFID(onPerfEntry)\r\n            getFCP(onPerfEntry)\r\n            getLCP(onPerfEntry)\r\n            getTTFB(onPerfEntry)\r\n        })\r\n    }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport reportWebVitals from \"./reportWebVitals\"\r\nimport { Auth0Provider } from \"@auth0/auth0-react\"\r\n\r\nReactDOM.render(\r\n  \r\n    <Auth0Provider \r\n        domain=\"jisho-flashcards.us.auth0.com\"\r\n        clientId=\"1iiJBdBmXz83B7nMSWrlZDMuvJTKK3Qh\"\r\n        redirectUri={window.location.origin}\r\n        useRefreshTokens={true}\r\n        cacheLocation=\"localstorage\"\r\n    >\r\n\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n\r\n    </Auth0Provider>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}